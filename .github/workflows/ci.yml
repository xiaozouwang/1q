# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CI

on:
  push:
    branches: [ "master", "dev" ]
  pull_request:
    branches: [ "master" ]

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9", "3.10", "3.11", "3.12" ]
        os: [ windows-latest, ubuntu-latest ]

    defaults:
      run:
        shell: bash

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            ~/.venv
          key: ${{ runner.os }}-poetry-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-${{ matrix.python-version }}-
            ${{ runner.os }}-poetry-
            ${{ runner.os }}-

      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Install dependencies
        run: |
          poetry lock --no-update
          poetry install
          poetry run pip install git+https://github.com/guillaumekln/faster-whisper
          poetry run pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121

      - name: Install ffmpeg
        uses: FedericoCarboni/setup-ffmpeg@v2
        id: setup-ffmpeg

      - name: Add OpenAI key to environment variables
        run: echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV

      - name: Add ANTHROPIC API Key to environment variables
        run: echo "ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY }}" >> $GITHUB_ENV

      - name: Test with unittest
        working-directory: ./tests
        run: |
          poetry run python -m unittest discover -s . -p 'test_*.py'